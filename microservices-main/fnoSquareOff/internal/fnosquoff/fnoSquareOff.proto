syntax = "proto3";

package fnosquoff;

option go_package = ".";

service SquareOffService {
  rpc SquareOffOrder (SquareOffRequest) returns (SquareOffResponse);
}

message SquareOffRequest {
 int64 FFO_USR_ID = 1;
 string FFO_PRDCT_TYP = 2;

 repeated FnoData FcpDetails = 3;
}

message FnoData {
  string FCP_CLM_MTCH_ACCNT = 1;
  string FCP_XCHNG_CD = 2;
  string FCP_PRDCT_TYP = 3;
  string FCP_INDSTK = 4;
  string FCP_UNDRLYNG = 5;
  string FCP_EXPRY_DT = 6;
  string FCP_EXER_TYP = 7;
  int64 FCP_STRK_PRC = 8;
  string FCP_OPT_TYP = 9;
  int64 FCP_IBUY_QTY = 10;
  double FCP_IBUY_ORD_VAL = 11;
  int64 FCP_ISELL_QTY = 12;
  double FCP_ISELL_ORD_VAL = 13;
  int64 FCP_EXBUY_QTY = 14;
  double FCP_EXBUY_ORD_VAL = 15;
  int64 FCP_EXSELL_QTY = 16;
  double FCP_EXSELL_ORD_VAL = 17;
  int64 FCP_BUY_EXCTD_QTY = 18;
  int64 FCP_SELL_EXCTD_QTY = 19;
  string FCP_OPNPSTN_FLW = 20;
  int64 FCP_OPNPSTN_QTY = 21;
  double FCP_OPNPSTN_VAL = 22;
  int64 FCP_EXRC_QTY = 23;
  int64 FCP_ASGND_QTY = 24;
  double FCP_OPT_PREMIUM = 25;
  double FCP_MTM_OPN_VAL = 26;
  double FCP_IMTM_OPN_VAL = 27;
  double FCP_UDLVRY_MRGN = 28;
  string FCP_MTM_FLG = 29;
  double FCP_TRG_PRC = 30;
  double FCP_MIN_TRG_PRC = 31;
  string FCP_DLVRY_MODE_FLAG = 32;
  double FCP_DLVRY_OBLGAMT_BLCKD = 33;
  int64 FCP_DLVRY_QTY_BLCKD = 34;
  double FCP_AVG_PRC = 35;
  string FCP_UCC_CD = 36;
}

message SquareOffResponse {
  string status = 1;
  string message = 2;
}

// protoc --proto_path=internal --go_out=generated --go-grpc_out=generated internal/fnosquoff/fnoSquareOff.proto
